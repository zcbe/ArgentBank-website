swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []  # Utilise l'authentification Bearer pour sécuriser l'endpoint
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []  # Utilise l'authentification Bearer pour sécuriser l'endpoint
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Get all transactions
      description: Retrieve a list of all transactions for the authenticated user, grouped by account for the current month
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: query
          name: month
          description: The month for which to retrieve transactions
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              accounts:
                type: array
                items:
                  type: object
                  properties:
                    accountId:
                      type: string
                    accountName:
                      type: string
                    transactions:
                      type: array
                      items:
                        $ref: '#/definitions/Transaction'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Get Transaction Details
      description: Retrieve details of a specific transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: transactionId
          description: ID of the transaction
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Transaction'
        '401':
          description: Unauthorized
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Update Transaction
      description: Update the details of an existing transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: transactionId
          description: ID of the transaction
          required: true
          type: string
        - in: body
          name: body
          description: New details for the transaction
          required: true
          schema:
            type: object
            properties:
              category:
                type: string
                enum: [food, entertainment, utilities, housing, transportation, other]
              notes:
                type: string
      produces:
        - application/json
      responses:
        '200':
          description: Transaction updated successfully
          schema:
            $ref: '#/definitions/Transaction'
        '401':
          description: Unauthorized
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    type: object
    required:
      - email
      - password
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user username
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user username
  Login:
    type: object
    required:
      - email
      - password
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  LoginResponse:
    type: object
    properties:
      token:
        type: string
        description: authentication token
      user:
        $ref: '#/definitions/UserProfile'
  ApiResponse:
    type: object
    properties:
      message:
        type: string
        description: response message
      data:
        type: object
        description: additional data
  Transaction:
    type: object
    properties:
      id:
        type: string
      accountId:
        type: string
      accountName:
        type: string
      description: 
        type: string
      amount:
        type: number
      date:
        type: string
        format: date-time
      type:
        type: string
        enum: [electronic, cash, check, transfer]
      category:
        type: string
        enum: [food, entertainment, utilities, housing, transportation, other]
      notes:
        type: string
  TransactionList:
    type: array
    items:
      $ref: '#/definitions/Transaction'
